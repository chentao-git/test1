<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxm.it.business.dao.IRepaymentPlanDao">
	<sql id="query_repayment_sql">
		SELECT
		t.repayment_plan_id as repaymentPlanId,
		t.amount_Payable as amountPayable,
		t.periods as periods,
		t.return_Principal as returnPrincipal, 
		t.return_Interest as returnInterest,
		t.return_Default_interest as returnDefaultInterest,
		t.return_Date as returnDate,
		t.quoted_price_id as quotedPriceId,
		a.apply_Info_Id AS applyInfoId,
		(SELECT COUNT(collection_Id) FROM xxm_collection_t o WHERE o.apply_Info_Id = a.apply_Info_Id) AS collectionCount,
		a.loan_Contract_No as loanContractNo,
		a.production_Vl as productionVl,
		getBaseDateNameByCode('PRODUCE_TYPE',a.production_Vl,1) AS productionName,
		a.create_date as createDate,
		a.apply_info_status as applyInfoStatus,
		c.base_Customer_Name as baseCustomerName,
		c.cert_Type as certType,
		c.cert_No as certNo,
		c.mobile_No as mobileNo,
		c.fixed_line as fixedLine

		FROM
		xxm_repayment_plan_t t
		LEFT JOIN xxm_quoted_price_t p ON p.quoted_price_id=t.quoted_price_id
		LEFT JOIN xxm_apply_info_t a ON p.apply_Info_Id = a.apply_Info_Id
		LEFT JOIN xxm_customer_t c ON a.apply_Customer_Id=c.customer_Id
		WHERE 1=1
	</sql>
	<sql id="query_repayment_basics_sql">
	    SELECT
        DISTINCT
			s.payment_Periods AS periods,
			a.apply_Info_Id AS applyInfoId,
			a.loan_Contract_No as loanContractNo,
			a.production_Vl as productionVl,
			getBaseDateNameByCode('PRODUCE_TYPE',a.production_Vl,1) AS productionName,
			a.create_date as createDate,
			a.apply_info_status as applyInfoStatus,
			c.base_Customer_Name as baseCustomerName,
			c.cert_Type as certType,
			c.cert_No as certNo,
			c.mobile_No as mobileNo,
			c.fixed_line as fixedLine
		FROM
			xxm_repayment_plan_t t
			LEFT JOIN xxm_quoted_price_t p ON p.quoted_price_id=t.quoted_price_id
			LEFT JOIN xxm_apply_info_t a ON p.apply_Info_Id = a.apply_Info_Id
	        LEFT JOIN xxm_supplement_base_t s ON s.apply_Info_Id = a.apply_Info_Id
			LEFT JOIN xxm_customer_t c ON a.apply_Customer_Id=c.customer_Id
		WHERE 1=1
	</sql>
	<sql id="repayment_select_condition">
	   
		<if test="applyInfoStatus != null and applyInfoStatus !=''">
			AND a.apply_info_status = #{applyInfoStatus,jdbcType=VARCHAR}
		</if>
		<if test="loanContractNo != null and loanContractNo !=''">
			AND a.loan_Contract_No = #{loanContractNo,jdbcType=VARCHAR}
		</if>
		<if test="baseCustomerName != null and baseCustomerName !=''">
			AND c.base_Customer_Name=#{baseCustomerName,jdbcType=VARCHAR}
		</if>
		<if test="startCreateDate != null and startCreateDate !=''">
			AND a.create_date <![CDATA[ >= ]]> #{startCreateDate,jdbcType=VARCHAR}
		</if>
		 <if test="repaymentPlanId != null and repaymentPlanId != ''">
	        AND t.repayment_plan_id = #{repaymentPlanId,jdbcType=VARCHAR}
	    </if>
		<if test="endCreateDate != null and endCreateDate !=''">
			AND a.create_date <![CDATA[ <= ]]> #{endCreateDate,jdbcType=VARCHAR}
		</if>
		<if test="status != null and status != ''">
		    AND t.status=#{status,jdbcType=VARCHAR}
		</if>
	</sql>
	<sql id="select_condition">
	  <if test="loanContractNo != null">
			AND a.loan_Contract_No = #{loanContractNo,jdbcType=VARCHAR}
	</if>
	<if test="status != null and status != ''">
		    AND t.status=#{status,jdbcType=VARCHAR}
		</if>
	</sql>
	<!-- 查询还款列表信息 -->
	<select id="findRepaymentPlanList" resultType="com.xxm.it.business.vo.RepaymentPlanVO"
		parameterType="com.xxm.it.business.vo.RepaymentPlanVO">
		<include refid="query_repayment_sql"></include>
		<include refid="repayment_select_condition"></include>
		
		order by t.create_date desc
		limit
		#{offset,jdbcType=VARCHAR},#{limit,jdbcType=VARCHAR}
	</select>

	<!-- 查询还款列表总数 -->
	<select id="findRepaymentPlanListCount" resultType="java.lang.Integer"
		parameterType="com.xxm.it.business.vo.RepaymentPlanVO">
		SELECT COUNT(1)
		FROM
		xxm_repayment_plan_t t
		LEFT JOIN xxm_quoted_price_t p ON p.quoted_price_id=t.quoted_price_id
		LEFT JOIN xxm_apply_info_t a ON p.apply_Info_Id = a.apply_Info_Id
		LEFT JOIN xxm_customer_t c ON a.apply_Customer_Id=c.customer_Id
		WHERE 1=1
		<include refid="repayment_select_condition"></include>
	</select>
	<!-- 查询信息 -->
	<select id="findRepaymentPlan" resultType="com.xxm.it.business.vo.RepaymentPlanVO"
		parameterType="com.xxm.it.business.vo.RepaymentPlanVO">
		<include refid="query_repayment_sql"></include>
		<include refid="repayment_select_condition"></include>
	</select>
	
		<!-- 查询信息 -->
	<select id="findRepaymentPlans" resultType="com.xxm.it.business.vo.RepaymentPlanVO"
		parameterType="com.xxm.it.business.vo.RepaymentPlanVO">
		<include refid="query_repayment_sql"></include>
		<include refid="select_condition"></include>
	</select>
	
	<select id="findRepaymentPlanss" resultType="com.xxm.it.business.vo.RepaymentPlanVO" parameterType="com.xxm.it.business.vo.RepaymentPlanVO">
	     <include refid="query_repayment_basics_sql"></include>
	     <include refid="repayment_select_condition"></include>
	</select>
	<update id="updateRepaymentPlan">
	     UPDATE xxm_repayment_plan_t 
		 SET
		   status= #{status, jdbcType=VARCHAR}	
		 WHERE
           repayment_plan_id = #{repaymentPlanId,jdbcType=VARCHAR}
	</update>
    <insert id="addCollection" parameterType="com.xxm.it.business.vo.CollectionVO">
     INSERT INTO xxm_collection_t(
		apply_Info_Id,
		collection_Method_VL,
		collecting_Time,
		collector,
		contact_Number,
		contacts,
		door_To_Door_Personnel,
		door_To_Door_Address,
		take_Steps,
		processing_Results,
		create_by,
		create_date,
		last_update_by,
		last_update_date
	 )VALUES(
		#{applyInfoId,jdbcType=VARCHAR},
		#{collectionMethodVL,jdbcType=VARCHAR},
		#{collectingTime,jdbcType=VARCHAR},
		#{collector,jdbcType=VARCHAR},
		#{contactNumber,jdbcType=VARCHAR},
		#{contactscontacts,jdbcType=VARCHAR},
		#{doorToDoorPersonnel,jdbcType=VARCHAR},
		#{doorToDoorAddress,jdbcType=VARCHAR},
		#{takeSteps,jdbcType=VARCHAR},
		#{processingResults,jdbcType=VARCHAR},
		
		#{createBy,jdbcType=VARCHAR},
		CURRENT_TIMESTAMP (),
		#{lastUpdateBy,jdbcType=VARCHAR},
		CURRENT_TIMESTAMP ()
	 )
    </insert>
</mapper>