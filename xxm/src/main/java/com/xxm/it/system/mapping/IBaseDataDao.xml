<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xxm.it.system.dao.IBaseDataDao" >
	
	<!-- 基础数据字段 -->
	<sql id="baseData_select_filed">
		SELECT 
			t.base_id AS baseId,
			t.base_parent_id AS baseParentId,
			t.base_code AS baseCode,
			t.base_code_value AS baseCodeValue,
			t.base_name AS baseName,
			t.`level` AS LEVEL,
			t.valid_flag AS validFlag,
			t.remark AS remark,
			t.create_date AS createDate,
			t.create_by AS createBy,
			(select us.name from xxm_user_t us where us.user_id = t.create_by) createByName,
			t.last_update_date AS lastUpdateDate,
			t.last_update_by AS lastUpdateBy,
			(select us.name from xxm_user_t us where us.user_id = t.last_update_by) lastUpdateByName,
			t.extend_Field1 as extendField1,
			t.extend_Field2 as extendField2,
			t.extend_Field3 as extendField3,
			t.extend_Field4 as extendField4
		FROM xxm_base_data_t t 
	   WHERE 1 = 1
	</sql>
	
	<!-- 查询条件 -->
	<sql id="baseDate_select_condition">
		<if test="baseId != null and baseId !=''">
	    	and t.base_id = #{baseId,jdbcType=VARCHAR} 
	  	</if>
		<if test="baseCode != null and baseCode !=''">
	    	and t.base_code = #{baseCode,jdbcType=VARCHAR} 
	  	</if>
	  	<if test="baseCodeValue != null and baseCodeValue !=''">
	    	and t.base_code_value = #{baseCodeValue,jdbcType=VARCHAR} 
	  	</if>
	  	<if test="level != null and level != ''">
	    	and t.level = #{level,jdbcType=VARCHAR} 
	  	</if>
	  	<if test="validFlag != null and validFlag != ''">
	  		and t.valid_flag = #{validFlag,jdbcType=INTEGER} 
	  	</if>
	  	<if test="baseParentId != null and baseParentId != ''">
	  		and t.base_parent_id = #{baseParentId,jdbcType=INTEGER} 
	  	</if>
	  	<if test="baseName != null and baseName != ''">
	  		and t.base_name = #{baseName,jdbcType=VARCHAR} 
	  	</if>
	  	<if test="matchBaseName != null and matchBaseName != ''">
	  		and t.base_name like concat("%",#{matchBaseName,jdbcType=VARCHAR},'%')
	  	</if>
	  	<if test="matchBaseCode != null and matchBaseCode != ''">
	  		and t.base_code like concat("%",#{matchBaseCode,jdbcType=VARCHAR},'%')
	  	</if>
	  	<if test="null != baseCodeValueArray ">
			AND t.base_code_value in 
			<foreach collection="baseCodeValueArray" item="item" index="index" separator="," open="(" close=")">  
				#{item}
			</foreach> 
		</if>
		<if test="extendField1 != null and extendField1 != ''">
	  		and t.extend_Field1 = #{extendField1,jdbcType=VARCHAR}
	  	</if>
	  	<if test="extendField2 != null and extendField2 != ''">
	  		and t.extend_Field2 = #{extendField2,jdbcType=VARCHAR}
	  	</if>
	  	<if test="extendField3 != null and extendField3 != ''">
	  		and t.extend_Field3 = #{extendField3,jdbcType=VARCHAR}
	  	</if>
	  	<if test="extendField4 != null and extendField4 != ''">
	  		and t.extend_Field4 = #{extendField4,jdbcType=VARCHAR}
	  	</if>
	</sql>
	
	<!-- 查询基础数据信息 -->
	<select id="findBaseDataList" resultType="com.xxm.it.system.vo.BaseDataVO" parameterType="com.xxm.it.system.vo.BaseDataVO">
		<include refid="baseData_select_filed"></include>
		<include refid="baseDate_select_condition"></include>
	  	order by t.last_update_date desc
		limit #{offset,jdbcType=VARCHAR},#{limit,jdbcType=VARCHAR}
	</select>
	
	<!-- 查询基础数据信息 -->
	<select id="findBaseDataListCount" resultType="java.lang.Integer" parameterType="com.xxm.it.system.vo.BaseDataVO">
		SELECT count(1) FROM xxm_base_data_t t  WHERE 1 = 1
		<include refid="baseDate_select_condition"></include>
	</select>
	
	<!-- 根据Id查询基础数据信息 -->
	<select id="findBaseDataById" resultType="com.xxm.it.system.vo.BaseDataVO" parameterType="com.xxm.it.system.vo.BaseDataVO">
		<include refid="baseData_select_filed"></include>
		<include refid="baseDate_select_condition"></include>
	</select>
	
	<!-- 查询所有基础数据列表信息 -->
	<select id="findAllBaseDataList" resultType="com.xxm.it.system.vo.BaseDataVO" parameterType="com.xxm.it.system.vo.BaseDataVO">
		<include refid="baseData_select_filed"></include>
		<include refid="baseDate_select_condition"></include>
	</select>
	
	<!-- 根据Code查询基础数据信息 -->
	<select id="findBaseDataListByCode" resultType="com.xxm.it.system.vo.BaseDataVO" parameterType="com.xxm.it.system.vo.BaseDataVO">
		<include refid="baseData_select_filed"></include>
		<include refid="baseDate_select_condition"></include>
		<if test="order != null and order == 'last_update_date'">
		  	order by t.last_update_date
		</if>
		<if test="order != null and order == 'extend_Field1'">
		  	order by t.extend_Field1
		</if>
		<if test="order != null and order == 'base_id'">
		  	order by t.base_id
		</if>
	</select>
	
	<!-- 查询是否存在下级节点 -->
	<select id="findExistsParentBaseData" resultType="com.xxm.it.system.vo.BaseDataVO" parameterType="com.xxm.it.system.vo.BaseDataVO">
		SELECT
			t.base_id AS baseId,
			t.base_name AS baseName,
			count(1)
		FROM xxm_base_data_t t
		INNER JOIN xxm_base_data_t t1 ON t.base_id = t1.base_parent_id
		WHERE 1=1 
		  and t.base_id in
		  <foreach collection="baseIds" item="item" index="index" separator="," open="(" close=")">  
			#{item}
		  </foreach> 
		GROUP BY t.base_id
	</select>

	<!-- 添加配置项 -->
	<insert id="createBaseData" parameterType="com.xxm.it.system.vo.BaseDataVO">
		INSERT INTO xxm_base_data_t (
			base_parent_id,
			base_name,
			base_code,
			base_code_value,
			level,
			valid_flag,
			remark,
			extend_Field1,
			extend_Field2,
			extend_Field3,
			extend_Field4,
			create_date,
			create_by,
			last_update_by,
			last_update_date
		)
		VALUES
		(
			#{baseParentId,jdbcType=VARCHAR},
			#{baseName,jdbcType=VARCHAR},
			#{baseCode,jdbcType=VARCHAR},
		 	#{baseCodeValue,jdbcType=VARCHAR},
			#{level,jdbcType=VARCHAR},
			#{validFlag,jdbcType=VARCHAR},
			#{remark,jdbcType=VARCHAR},
			#{extendField1,jdbcType=VARCHAR},
			#{extendField2,jdbcType=VARCHAR},
			#{extendField3,jdbcType=VARCHAR},
			#{extendField4,jdbcType=VARCHAR},
			SYSDATE(),
			#{createBy,jdbcType=VARCHAR},
			#{lastUpdateBy,jdbcType=VARCHAR},
			SYSDATE()
		)
	</insert>
	<update id="updateBaseData" parameterType="com.xxm.it.system.vo.BaseDataVO">
		UPDATE xxm_base_data_t SET 
			base_name = #{baseName,jdbcType=VARCHAR},
			base_code = #{baseCode,jdbcType=VARCHAR},
			base_code_value = #{baseCodeValue,jdbcType=VARCHAR},
			valid_flag = #{validFlag,jdbcType=VARCHAR},
			remark = #{remark,jdbcType=VARCHAR},
			extend_Field1 = #{extendField1,jdbcType=VARCHAR},
			extend_Field2 = #{extendField2,jdbcType=VARCHAR},
			extend_Field3 = #{extendField3,jdbcType=VARCHAR},
			extend_Field4 = #{extendField4,jdbcType=VARCHAR},
			last_update_date = SYSDATE(),
			last_update_by = #{lastUpdateBy,jdbcType=VARCHAR}
		WHERE
			base_id = #{baseId,jdbcType=VARCHAR} 
	</update>
	
	<update id="updateBaseCode" parameterType="java.lang.String">
		UPDATE xxm_base_data_t SET 
			base_code = #{1}
		WHERE
			base_code = #{0} 
	</update>
	
	<!-- 删除配置项 -->
	<delete id="deleteBaseData" parameterType="com.xxm.it.system.vo.BaseDataVO">
		delete from xxm_base_data_t 
		where base_id in
		<foreach collection="baseIds" item="item" index="index" separator="," open="(" close=")">  
			#{item}
		</foreach> 
	</delete>
	
	<!-- 查询流程日志 -->
	<select id="findFlowLogList"  parameterType="com.xxm.it.system.vo.FlowLogVO" resultType="com.xxm.it.system.vo.FlowLogVO">
		select 
			t.log_id as logId,
			t.result as result,
			IFNULL(
				IFNULL(
					IFNULL(
						getBaseDateNameByCode (
							'SIGN_RETURN_INFO_STATUS',
							t.reason,
							1
						),
						getBaseDateNameByCode (
							'LOAN_NOTICE_REQUEST_STATUS',
							t.reason,
							1
						)
					),
					getBaseDateNameByCode (
						'APPROVE_REJECT_REASON',
						t.reason,
						1
					)
				),
				t.reason
			) reason,
			t.business_key as businessKey,
			t.user_id as userId,
			(select us.name from xxm_user_t us where us.user_id = t.user_id) userName,
			t.task_definition_key as taskDefinitionKey,
			t.processing_time as processingTime,
			t.remark as remark,
			t.create_by as createBy,
			t.create_date as createDate,
			t.last_update_by as lastUpdateBy,
			t.last_update_date as lastUpdateDate,
			t.extend_Field1 as extendField1,
			t.extend_Field2 as extendField2,
			t.extend_Field3 as extendField3,
			t.extend_Field4 as extendField4
		from xxm_flow_log_t t
		where t.business_key = #{businessKey,jdbcType=VARCHAR}
		order by t.processing_time asc
	</select>
	
	<!-- 添加流程日志 -->
	<insert id="createFlowLog" parameterType="com.xxm.it.system.vo.FlowLogVO">
		INSERT INTO xxm_flow_log_t (
			result,
			reason,
			business_key,
			user_id,
			task_definition_key,
			processing_time,
			remark,
			create_by,
			create_date,
			last_update_by,
			last_update_date,
			extend_Field1,
			extend_Field2,
			extend_Field3,
			extend_Field4
		)
		VALUES
		(
			#{result,jdbcType=VARCHAR},
			#{reason,jdbcType=VARCHAR},
			#{businessKey,jdbcType=VARCHAR},
			#{userId,jdbcType=VARCHAR},
			#{taskDefinitionKey,jdbcType=VARCHAR},
			sysdate(),
			#{remark,jdbcType=VARCHAR},
			#{createBy,jdbcType=VARCHAR},
			sysdate(),
			#{createBy,jdbcType=VARCHAR},
			sysdate(),
			#{extendField1,jdbcType=VARCHAR},
			#{extendField2,jdbcType=VARCHAR},
			#{extendField3,jdbcType=VARCHAR},
			#{extendField4,jdbcType=VARCHAR}
		)
	</insert>
	
</mapper>