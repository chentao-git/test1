<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" 
	xsi:schemaLocation="
	http://www.springframework.org/schema/tx
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd">
	
	<!-- 自动扫描 -->
	<context:component-scan base-package="com.xxm.it.*" >
		<!-- 事物扫描配置 -->
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Service"/>
	</context:component-scan> 
	
	<!--自动注入ApplicationContext对象 -->
	<bean class="com.xxm.it.system.util.XxmAppContext"/>  
	
	<!-- 引入文件 -->
	<import resource="applicationContext-task.xml"/>
	<import resource="applicationContext-server.xml"/>
	<import resource="applicationContext-activiti.xml"/>
	<!-- <import resource="applicationContext-aop.xml"/> -->
	<tx:annotation-driven />

	<!-- 引入配置文件 -->
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:config.properties" />
	</bean>
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbcDriverClassName}" />
		<property name="url" value="${jdbcUrl}" />
		<property name="username" value="${jdbcUsername}" />
		<property name="password" value="${jdbcPassword}" />
		<!-- 初始化连接大小 -->
		<property name="initialSize" value="${initialSize}"></property>
		<!-- 连接池最大数量 -->
		<property name="maxActive" value="${maxActive}"></property>
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="${maxIdle}"></property>
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="${minIdle}"></property>
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="${maxWait}"></property>
		<!-- 如果数据源的defaultAutoCommit设置为True了，那么方法中如果自己捕获了异常，事务是不会回滚的，如果没有自己捕获异常则事务会回滚 -->
		<property name="defaultAutoCommit" value="false"/>
	</bean>
	<!-- spring和MyBatis完美整合，不需要mybatis的配置映射文件 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!-- 自动扫描mapping.xml文件 -->
		<property name="mapperLocations" value="classpath:com/xxm/it/*/mapping/*.xml"></property>
	</bean>

	<!-- DAO接口所在包名，Spring会自动查找其下的类 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.xxm.it.*.dao" />
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
	</bean>

	<!-- (事务管理)transaction manager, use JtaTransactionManager for global tx -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean> 
	
	<tx:advice id="userTxAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="delete*" propagation="REQUIRED"  />
			<tx:method name="insert*"  propagation="REQUIRED"   />
			<tx:method name="add*"  propagation="REQUIRED"   />
			<tx:method name="create*"  propagation="REQUIRED"/>
			<tx:method name="update*" propagation="REQUIRED"  />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="select*" propagation="SUPPORTS" />
			<tx:method name="*"  propagation="REQUIRED"  />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- <aop:pointcut id="pointcut" expression=" execution(public * com.*.service..*.*(..))" />  -->
		<aop:pointcut id="pointcut" expression=" execution(public * com.xxm.it.*.service..*.*(..))" /> <!--把事务控制在Service层 -->
		<aop:advisor pointcut-ref="pointcut" advice-ref="userTxAdvice" />
	</aop:config>


	<!-- AOP切面进去，告诉方法用transation
		<aop:config>
			<aop:pointcut expression="execution(com.cph.*.dao)"  id="servicePointcut"/>
			<aop:advisor advice-ref="transactionManager" pointcut-ref="servicePointcut"/>
		</aop:config> 
		 -->
</beans>
